version: '3.8'

name: MangAdventure

services:
  postgresdb:
    container_name: postgresdb
    image: postgres:14-alpine
    restart: always
    env_file:
      - env/database.env
    ports:
      - 5432:5432
    expose: [5432]
    healthcheck:
      test: ['CMD', 'pg_isready', '-U$POSTGRES_USER']
    stop_grace_period: 30s
    networks:
      - manganet
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:7.0-alpine
    restart: always
    ports:
      - 6379:6379
    expose: [6379]
    command: ['--save', '1800 1 600 100 120 1000']
    healthcheck:
       test: ['CMD', 'redis-cli', 'ping']
    networks:
      - manganet
    volumes:
      - redisdata:/data

  nginx:
    container_name: nginx_custom
    image: ghcr.io/mangadventure/nginx:91ad1abfb285
    restart: always
    depends_on:
      mangadventure:
        condition: service_started
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
    networks:
      - manganet
    volumes:
      - ./nginx/logs:/var/log/nginx
      - ./nginx/sites:/etc/nginx/sites-enabled
      - ./nginx/certs:/etc/letsencrypt:ro
    volumes_from:
      - mangadventure

  mangadventure:
    container_name: mangadventure
    image: ghcr.io/mangadventure/app:latest
    depends_on:
      postgresdb:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - env/database.env
      - env/mangadventure.env
    ports:
      - 3000:3000
      - 57475:57475
    expose: [3000, 57475]
    networks:
      - manganet
    volumes:
      - logs:/web/logs
      - static:/web/static
      - ./media:/web/media
      - ./.well-known:/web/.well-known
    secrets:
      - status_auth

networks:
  manganet:
    name: manganet

volumes:
  redisdata:
  pgdata:
  logs:
  static:
    driver: local
    driver_opts:
      device: ./static
      type: none
      o: bind

secrets:
  status_auth:
    file: status_auth.txt
